/* Javacript code generated by 'compile.javascript.pss' */
var pp = require('./Machine'); 
var mm = new pp.Machine(); 
script: 
while (mm.peep != null) {
  lex: { 
    // lexing phase
    mm.read();
    if (mm.testClass('[0-9]')) {
      mm.put();
      mm.workspace = '';
      mm.add("digit*");
      mm.push();
    }
    // allow multiple spaces in some positions
    if (mm.testClass('[:space:]')) {
      mm.whilePeep('[:space:]');
      mm.put();
      mm.workspace = '';
      mm.add("space*");
      mm.push();
    }
    // These literal tokens have their own name
    if ((mm.workspace == ".") || (mm.workspace == ",") || (mm.workspace == "$")) {
      mm.add("*");
      mm.push();
    }
    // show an error message if extraneous character in price
    if ((mm.workspace != "")) {
      mm.add(" << illegal character at char ");
      mm.chars();
      mm.add(".\n");
      mm.print();
      break script;
    }
    // parsing phase
  }
  parse: 
  while (true) { 
    mm.pop();
    // 2 tokens
    mm.pop();
    // allow some leading space around the $ sign
    if ((mm.workspace == "space*$*") || (mm.workspace == "$*space*")) {
      mm.workspace = '';
      mm.add("$*");
      mm.push();
      continue parse;
    }
    // allow some trailing and leading space.
    // this rule is not used because other rules are applied first
    // eg price = number cents ;
    if ((mm.workspace == "cents*space*")) {
      mm.workspace = '';
      mm.add("cents*");
      mm.push();
      continue parse;
    }
    // allow some trailing and leading space.
    if ((mm.workspace == "price*space*")) {
      mm.workspace = '';
      mm.add("price*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == "number*thousands*")) {
      mm.workspace = '';
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      if (mm.workspace.startsWith("0")) {
        mm.workspace = '';
        mm.add("number beginning with zero (");
        mm.get();
        mm.add(") at line ");
        mm.lines();
        mm.add("\n");
        mm.print();
        break script;
      }
      mm.workspace = '';
      mm.add("number*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == "number*cents*")) {
      mm.workspace = '';
      mm.get();
      mm.increment();
      mm.add(".");
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("price*");
      mm.push();
      continue parse;
    }
    mm.pop();
    if ((mm.workspace == "$*digit*thousands*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("number*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == ".*digit*digit*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("cents*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == "$*digit*cents*") || (mm.workspace == "$*number*cents*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.add(".");
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("price*");
      mm.push();
      continue parse;
    }
    mm.pop();
    if ((mm.workspace == "$*digit*digit*cents*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.add(".");
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("price*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == "$*digit*digit*thousands*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("number*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == ",*digit*digit*digit*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("thousands*");
      mm.push();
      continue parse;
    }
    // 5 tokens
    mm.pop();
    if ((mm.workspace == "$*digit*digit*digit*cents*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.add(".");
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("price*");
      mm.push();
      continue parse;
    }
    if ((mm.workspace == "$*digit*digit*digit*thousands*")) {
      mm.workspace = '';
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      mm.increment();
      mm.get();
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      if (mm.tapePointer > 0) mm.tapePointer--; 
      mm.put();
      mm.workspace = '';
      mm.add("number*");
      mm.push();
      continue parse;
    }
    mm.push();
    mm.push();
    mm.push();
    mm.push();
    mm.push();
    if ((mm.peep == null)) {
      mm.pop();
      if ((mm.workspace != "price*")) {
        mm.workspace = '';
        mm.add("No, not a price in the format $123,456.99 \n");
        mm.print();
        break script;
      }
      mm.workspace = '';
      mm.add("Yes, its a price \n");
      mm.add("The price was: ");
      mm.get();
      mm.add("\n");
      mm.print();
      break script;
    }
    break parse;
  }
} 
